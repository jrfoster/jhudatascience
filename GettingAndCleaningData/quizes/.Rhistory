View(activity_labels)
View(activity_labels)
factors <- factor(activity_labels$V1, activity_labels$V2)
factors
class(activity_labels$V1)
factors <- factor(activity_labels[,1], activity_labels[,2])
factors
factors <- factor(x = as.character(activity_labels$V1), levels = activity_labels$V2)
factors
levels(factors)
table(factors)
View(y_test)
View(y_test)
factors <- factor(y_test$V1, levels = activity_labels$V2)
factors
factors <- factor(y_test$V1)
factors
factors <- factor(y_test$V1, labels = activity_labels$V2)
factors
levels(factors)
table(factors)
View(y_test)
View(y_test)
datadir <- "UCI HAR Dataset"
X_train <- read.table(file.path(datadir, "train", "X_train.txt"))
X_test <- read.table(file.path(datadir, "test", "X_test.txt"))
y_train <- read.table(file.path(datadir, "train", "y_train.txt"))
y_test <- read.table(file.path(datadir, "test", "y_test.txt"))
activity_labels <- read.table(file.path(datadir, "activity_labels.txt"))
y_train_labeled <- factor(y_train$V1, labels = activity_labels$V2)
y_test_labeled <- factor(y_test$V1, labels = activity_labels$V2)
subject_train <- read.table(file.path(datadir, "train", "subject_train.txt"))
subject_test <- read.table(file.path(datadir, "test", "subject_test.txt"))
train_combined <- cbind(subject_train, y_train_labeled, X_train)
test_combined <- cbind(subject_test, y_test_labeled, X_test)
X_combined <- rbind(train_combined, test_combined)
View(test_combined)
View(test_combined)
View(train_combined)
View(train_combined)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
View(test_combined)
View(test_combined)
View(train_combined)
View(train_combined)
X_combined <- rbind(train_combined, test_combined)
datadir <= "UCI HAR Dataset"
datadir <- "UCI HAR Dataset"
X_train <- read.table(file.path(datadir, "train", "X_train.txt"), colClasses = c("numeric"))
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
y_train <- read.table(file.path(datadir, "train", "y_train.txt"), colClasses = c("factor"))
class(y_train$V1)
table(y_train$V1)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
activity_labels <- read.table(file.path(datadir, "activity_labels.txt"))
y_train <- read.table(file.path(datadir, "train", "y_train.txt"), colClasses = c("factor"))
y_test <- read.table(file.path(datadir, "test", "y_test.txt"), colClasses = c("factor"))
y_combined <- rbind(y_train, y_test)
levels(y_combined$V1) <- activity_labels$V2
factors(y_combined$V1)
levels(y_combined$V1)
table(y_combined$V1)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
View(X_train)
View(X_train)
View(y_combined)
View(y_combined)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
features <- read.table(file.path(datadir, "features.txt"), stringsAsFactors = FALSE)[,2]
meanstd_cols <- grep(".*-mean[(]|.*-std[(]", features)
features[, meanstd_cols]
features[meanstd_cols]
X_combined <- rbind(X_train, X_test)
X_test <- read.table(file.path(datadir, "test", "X_test.txt"), colClasses = c("numeric"))
X_combined <- rbind(X_train, X_test)
X_meanstd <- X_combined[, meanstd_cols]
View(X_meanstd)
View(X_meanstd)
colnames(X_meanstd) <- features[meanstd_cols]
View(X_meanstd)
View(X_meanstd)
View(y_combined)
View(y_combined)
colnames(y_combined) <- c("activity_label")
View(y_combined)
View(y_combined)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
datadir <- "UCI HAR Dataset"
X_train <- read.table(file.path(datadir, "train", "X_train.txt"), colClasses = c("numeric"))
X_test <- read.table(file.path(datadir, "test", "X_test.txt"), colClasses = c("numeric"))
X_combined <- rbind(X_train, X_test)
y_train <- read.table(file.path(datadir, "train", "y_train.txt"), colClasses = c("factor"))
y_test <- read.table(file.path(datadir, "test", "y_test.txt"), colClasses = c("factor"))
y_combined <- rbind(y_train, y_test)
subject_train <- read.table(file.path(datadir, "train", "subject_train.txt"))
subject_test <- read.table(file.path(datadir, "test", "subject_test.txt"))
subject_combined <- rbind(subject_train, subject_test)
features <- read.table(file.path(datadir, "features.txt"), stringsAsFactors = FALSE)[,2]
meanstd_cols <- grep(".*-mean[(]|.*-std[(]", features)
X_meanstd <- X_combined[, meanstd_cols]
activity_labels <- read.table(file.path(datadir, "activity_labels.txt"))
levels(y_combined$V1) <- activity_labels$V2
colnames(X_meanstd) <- features[meanstd_cols]
colnames(y_combined) <- c("ActivityLabel")
colnames(subject_combined) <- c("Subject")
rawFinal <- cbind(subject_combined, y_combined, X_meanstd)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
rm(X_train, X_test)
rm(y_train, y_test)
rm(subject_train, subject_test)
rm(X_combined)
rm(subject_combined, y_combined, X_meanstd)
View(rawFinal)
View(rawFinal)
rm(activity_labels)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
View(rawFinal)
View(rawFinal)
new <- rawFinal[, lapply(.SD,mean), by=list(Subject, ActivityLabel)]
new <- rawFinal[, lapply(.SD, mean), by=colnames(rawFinal)[1:2]]
new <- rawFinal[, lapply(.SD, mean), by = colnames(rawFinal)[1:2]]
library(data.table)
setkey(rawFinal, Subject, ActivityLabel)
class(rawFinal)
dtRawFinal <- data.table(rawFinal)
class(dtRawFinal)
setkey(dtRawFinal, Subject, ActivityLabel)
new <- dtRawFinal[, lapply(.SD, mean), by=colnames(rawFinal)[1:2]]
new <- dtRawFinal[, lapply(.SD, mean)]
new <- dtRawFinal[, lapply(.SD, mean), by=c(1:2)]
new <- dtRawFinal[, lapply(.SD, mean), by=c("Subject","ActivityLabel")]
View(new)
View(new)
new <- rawFinal[, lapply(.SD, mean), by=c("Subject","ActivityLabel")]
meltDS<-melt(rawFinal, id.var = c("Subject", "Activity"))
library(reshape2)
meltDS<-melt(rawFinal, id.var = c("Subject", "Activity"))
meltDS<-melt(rawFinal, id.var = c("Subject", "ActivityLabel"))
tidyMeansDS = dcast(meltDS , Subject + ActivityLabel ~ variable, mean)
View(tidyMeansDS)
View(tidyMeansDS)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
install.packages(pkg, dep = TRUE)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
install.packages(pkg, dep = TRUE)
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
install.packages(pkg, dep = TRUE)
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
source('~/DevR/coursera/GettingCleaningData/wearableComputing/run_analysis.R')
run_analysis()
source("run_analysis.R")
ls()
source("run_analysis.R")
run_analysis()
X_test <- read.table(file.path(datadir, "test", "X_test.txt"), colClasses = c("numeric"))
datadir <- "UCI HAR Dataset"
X_test <- read.table(file.path(datadir, "test", "X_test.txt"), colClasses = c("numeric"))
getwd()
setwd("/Users/jasonfoster/DevR/coursera/GettingCleaningData/quizes")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ", destfile = "communities.csv")
communities = read.csv("communities.csv")
q1 <- (communities$ACR = 6 & communities$AGS = 6)
q1 <- communities[ communities$ACR = 6 & communities$AGS = 6, ]
q1 <- communities[ communities$ACR == 6 & communities$AGS == 6, ]
agricultureLogical <- communities$ACR == 6 & communities$AGS == 6
q1 <- communities[which(agricultureLogical)]
head(q1)
q1 <- communities[which(agricultureLogical), ]
q1 <- subset(communities, which(agricultureLogical))
agricultureLogical
communities = read.csv("communities.csv")
View(communities)
View(communities)
agricultureLogical <- (communities$ACR == 3 & communities$AGS == 6)
agricultureLogical
table(agricultureLogical)
q1 <- communities[which(agricultureLogical), ]
head(q1)
head(q1)
library(jpeg)
require(jpeg)
require("jpeg")
install.packages(jpeg)
install.packages("jpeg")
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "jeff.jpg")
jeff <- readJPEG("jeff.jpg")
jeff <- readJPEG("jeff.jpg", native = TRUE)
quantile(jeff, probs = seq(.3, .8))
quantile(jeff, probs = c(.3, .8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "fgdp.csv")
fgdp <- read.csv("fgdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "fedstats.csv")
fedstats <- read.csv("fedstats.csv")
View(fedstats)
View(fedstats)
View(fgdp)
View(fgdp)
fedstats <- read.csv("fedstats.csv", skip = 4)
fedstats <- read.csv("fedstats.csv")
fgdp <- read.csv("fgdp.csv", skip = 4)
View(fedstats)
View(fedstats)
View(fgdp)
View(fgdp)
mergedData = merge(fedstats, fgdp, by.x="CountryCode",by.y="X",all=TRUE)
View(mergedData)
View(mergedData)
mergedData = merge(fedstats, fgdp, by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
View(mergedData)
mergedData = merge(fedstats, fgdp, by.x="CountryCode", by.y="X", all = L)
mergedData = merge(fedstats, fgdp, by.x="CountryCode", by.y="X", all = "L")
mergedData = merge(fedstats, fgdp, by.x="CountryCode", by.y="X", all.x = TRUE)
View(mergedData)
View(mergedData)
View(fedstats)
mergedData = merge(fgdp, fedstats, by.x = "X", by.y = "CountryCode", all.x = TRUE)
View(mergedData)
View(mergedData)
mergedData = merge(fgdp, fedstats, by.x = "X", by.y = "CountryCode", all.y = TRUE)
sorted <- sort(mergedData$X.4, decreasing = FALSE)
sort(mergedData$X.4, decreasing = FALSE)
mergedData[order(mergedData$X.4), ]
sorted <- mergedData[order(mergedData$X.4), ]
View(sorted)
View(sorted)
View(mergedData)
View(mergedData)
fedstats <- read.csv("fedstats.csv", skip = 4)
fedstats <- read.csv("fedstats.csv")
fgdp <- read.csv("fgdp.csv", skip = 4)
View(fgdp)
View(fgdp)
fgdp <- read.csv("fgdp.csv", skip = 4, colClasses = c("character", "numeric", null, "character", "numeric", rep(null,5)))
fgdp <- read.csv("fgdp.csv", skip = 4, colClasses = c("character", "numeric", "null", "character", "numeric", rep("null",5)))
fgdp <- read.csv("fgdp.csv", skip = 4)
fgdp$gdp <- as.numeric(gsub(",","", fgdp$X.4))
View(fgdp)
View(fgdp)
mergedData = merge(fedstats, fgdp, by.x="CountryCode", by.y="X", all.x = TRUE)
sorted <- mergedData[order(mergedData$gdp), ]
View(sorted)
View(sorted)
View(sorted)
View(sorted)
sorted <- mergedData[order(mergedData$X.1), ]
View(sorted)
View(sorted)
sorted <- mergedData[order(as.numeric(mergedData$X.1)), ]
View(sorted)
View(sorted)
fgdp <- read.csv("fgdp.csv", skip = 4)
View(fgdp)
View(fgdp)
fgdp$ranknum <- as.numeric(fgdp$X.1))
fgdp$ranknum <- as.numeric(fgdp$X.1)
View(fgdp)
View(fgdp)
mergedData = merge(fedstats, fgdp, by.x="CountryCode", by.y="X", all.x = TRUE)
sorted <- mergedData[order(as.numeric(mergedData$ranknum)), ]
View(sorted)
View(sorted)
View(fedstats)
View(fedstats)
View(fedstats)
View(fedstats)
View(fgdp)
View(fgdp)
fgdp <- read.csv("fgdp.csv", skip = 4)
View(fgdp)
View(fgdp)
fgdp <- read.csv("fgdp.csv", skip = 4, colClasses = c("character", "numeric", rep("character", 8)))
fgdp <- read.csv("fgdp.csv", skip = 4)
fgdp <- read.csv("fgdp.csv", skip = 4, stringsAsFactors = FALSE)
fgdp$ranknum <- as.numeric(fgdp$X.1)
mergedData = merge(fedstats, fgdp, by.x="CountryCode", by.y="X", all.x = TRUE)
sorted <- mergedData[order(mergedData$ranknum), ]
View(sorted)
View(sorted)
sorted <- mergedData[desc(order(mergedData$ranknum)), ]
sorted <- mergedData[order(mergedData$ranknum, decreasing = FALSE), ]
View(sorted)
View(sorted)
sorted <- mergedData[order(mergedData$ranknum, decreasing = TRUE), ]
sorted[13,]
q4 <- subset(mergedData, mergedData$Income.Group == "High income: OECD" | mergedData$Income.Group == "High income: nonOECD")
colMeans(q4$ranknum)
View(q4)
View(q4)
colMeans(q4$ranknum,)
colMeans(,q4$ranknum)
colMeans(q4)
install.package(plyr)
install.packages(plyr)
library(plyr)
r2 <- ddply(q4, .(IncomeGroup), summarize, mean=mean(ranknum))
View(q4)
View(q4)
r2 <- ddply(q4, .(q4$IncomeGroup), summarize, mean=mean(ranknum))
r2 <- ddply(q4, .(IncomeGroup), summarize, mean=mean(ranknum))
r2 <- ddply(q4, .(Income.Group), summarize, mean=mean(ranknum))
View(r2)
View(r2)
r2 <- ddply(q4, .(Income.Group), summarize, mean=mean(ranknum, na.rm = FALSE))
View(r2)
View(r2)
r2 <- ddply(q4, .(Income.Group), summarize, mean=mean(ranknum, na.rm = TRUE))
View(r2)
View(r2)
cut(mergedData, quantile(mergedData$ranknum, na.rm = TRUE))
j <- quantile(mergedData$ranknum, na.rm = TRUE)
table(mergedData$Income.Group, j)
install.packages(Hmisc2)
install.packages(Hmisc)
install.packages("Hmisc")
library(Hmisc)
mergedData$rankGroups = cut2(mergedData$ranknum, g=5)
table(mergedData$rankGroups, mergedData$Income.Group)
fgdp <- read.csv("fgdp.csv", skip = 4, header = FALSE)
View(fgdp)
View(fgdp)
fgdp <- read.csv("fgdp.csv", skip = 5, header = FALSE)
fgdp <- read.csv("fgdp.csv", skip = 5, header = FALSE, nrows = 190)
fedstats <- read.csv("fedstats.csv")
merged = merge(fedstats, fgdp, by.x = "CountryCode", by.y = "V1", all.x = TRUE)
View(merged)
View(merged)
merged$ranknum <- as.numeric(merged$V2)
sorted <- merged[order(merged$ranknum, decreasing = FALSE), ]
View(sorted)
View(sorted)
sorted <- merged[order(merged$ranknum, decreasing = TRUE), ]
sorted[13,]
merged = merge(fedstats, fgdp, by.x = "CountryCode", by.y = "V1", all.y = TRUE)
sorted <- merged[order(merged$ranknum, decreasing = TRUE), ]
merged$ranknum <- as.numeric(merged$V2)
sorted <- merged[order(merged$ranknum, decreasing = TRUE), ]
sorted[13,]
merged = merge(fedstats, fgdp, by.x = "CountryCode", by.y = "V1", all = FALSE)
View(merged)
View(merged)
merged$ranknum <- as.numeric(merged$V2)
sorted <- merged[order(merged$ranknum, decreasing = TRUE), ]
sorted[13,]
swirl()
getwd()
setwd("/Users/jasonfoster/DevR/coursera/GettingCleaningData/")
ls
student1 <- read.table("student1.txt")
getwd()
setwd ("/Users/jasonfoster/DevR/coursera/GettingCleaningData/student1")
getwd
source("run_analysis.R")
setwd("/Users/jasonfoster/DevR/coursera/GettingCleaningData/student1")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source('~/DevR/coursera/GettingCleaningData/student1/run_analysis.R')
getwd()
setwd("/Users/jasonfoster/DevR/coursera/GettingCleaningData/student2")
source("run_analysis.R")
setwd("/Users/jasonfoster/DevR/coursera/GettingCleaningData/student2/UCI HAR Dataset/")
source("../run_analysis.R")
getwd()
setwd("/Users/jasonfoster/DevR/coursera/GettingCleaningData/quizzes/")
setwd("/Users/jasonfoster/DevR/coursera/GettingCleaningData/quizes/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "idaho.csv")
hid <- read.csv("idaho.csv")
hid <- read.csv("idaho.csv")
names(hid)
q1 <- strsplit(tolower(names(hid)), "wgtp")
q1[113]
q1[123]
q1 <- strsplit(tolower(names(hid)), "wgtp", fixed = TRUE)
q1[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "fgdp.txt")
fgdp <- read.csv("fgdp.txt", header = FALSE, skip = 5, nrows = 190)
View(fgdp)
View(fgdp)
fgdp <- read.csv("fgdp.txt", header = FALSE, skip = 5, nrows = 190, encoding = "UTF-8")
fgdp <- read.csv("fgdp.txt", header = FALSE, skip = 5, nrows = 190, fileEncoding = "UTF-8")
fgdp <- read.csv("fgdp.txt", header = FALSE, skip = 5, nrows = 190, fileEncoding = "ASCII", encoding = "UTF-8")
fgdp <- read.csv("fgdp.txt", header = FALSE, skip = 5, nrows = 190)
fgdp$gdp <- gsub(fgdp$V5, ",", "")
fgdp$gdp <- gsub(",", "", fgdp$V5)
mean(fgdp$gdp)
gdpmean <- mean(as.numeric(gsub(",", "", fgdp$V5)))
grep("^United", fgdp$V4)
fgdp[186,]
fgdp[99,]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv" destfile = "fcdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "fcdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "fedstats.csv")
fgdp <- read.file("fgdp.csv", header = FALSE, skip = 5, nrows = 190)
fgdp <- read.csv("fgdp.csv", header = FALSE, skip = 5, nrows = 190)
fedstats <- read.csv("fedstats.csv")
merged = merge(fedstats, fgdp, by.x = "CountryCode", by.y = "V1", all = FALSE)
View(fedstats)
View(fedstats)
View(fgdp)
View(fgdp)
View(merged)
View(merged)
grep("\.*[Ff]iscal year end\.*")
grep("(\W|^)([Ff]iscal\syear\send)(\W|$)", merged$Special.Notes)
grep("(\W|^)([Ff]iscal\syear\send)(\W|$)", merged$Special.Notes, perl = TRUE)
grep("(\\W|^)([Ff]iscal\\syear\\send)(\\W|$)", merged$Special.Notes, perl = TRUE)
fye <- grep("(\\W|^)([Ff]iscal\\syear\\send)(\\W|$)", merged$Special.Notes, perl = TRUE)
size(fye)
length(fye)
fye <- merged[grep("(\\W|^)([Ff]iscal\\syear\\send)(\\W|$)", merged$Special.Notes, perl = TRUE), ]
View(fye)
View(fye)
fye <- merged[grep("(\\W|^)([Ff]iscal\\syear\\send:\\sJune)(\\W|$)", merged$Special.Notes, perl = TRUE), ]
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
library(lubridate)
install.packages("lubridate")
library(lubridate)
year(sampleTimes)
year(sampleTimes[[1]])
class(year(sampleTimes[[1]]))
year(sampleTimes) == 2010
sample2012 = sampleTimes[year(sampleTimes) == 2012]
size(sample2012)
length(sample2012)
mondays2012 = sampleTimes[year(sampleTimes) == 2012 & wday(sampleTimes) == 2]
size(mondays2012)
length(mondays2012)
library(lattice)
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
qunif(.75, 0, 1)
x <- 1:4
p <-x/sum(x)
temp <- rbind(x,p)
rownames(temp) <- c("X","Prob")
temp
